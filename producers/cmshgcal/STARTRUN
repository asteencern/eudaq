#!/bin/bash

export RCPORT=44000
[ "$1" != "" ] && RCPORT=$1

export HOSTIP=127.0.0.1
export TLUIP=127.0.0.1
export HOSTNAME=127.0.0.1 # This is for the run control to open the socket on the internal interface. By default it would use the external one.


dt=`date +"%y_%b_%d_%Hh%Mm"`
echo $dt
if [ -f './data/runnumber.dat' ]; then
    RUNNUM=$(cat './data/runnumber.dat')
else
    RUNNUM=0
fi

NEWRUNNUM=$((RUNNUM+1))
echo 'Last Run number: ' $RUNNUM 'New Run number:' $NEWRUNNUM


cd `dirname $0`
if [ -z "$LD_LIBRARY_PATH" ]; then
  export LD_LIBRARY_PATH="`pwd`/lib"

else
  export LD_LIBRARY_PATH="`pwd`/lib:$LD_LIBRARY_PATH"
fi

if [ ! -d ./data ]; then
  mkdir -p ./data;
fi
if [ ! -d ./logs ]; then
  mkdir -p ./logs;
fi
if [ ! -d ./data_root ]; then
  mkdir -p ./data_root;
fi
if [ ! -d ./snapshots ]; then
  mkdir -p ./snapshots;
fi

mkdir -p ./snapshots/run$NEWRUNNUM/;


printf '\033[1;32;48m \t STARTING DAQ LOCALLY\033[0m \n'
echo $(date)
printf '\033[22;33m\t Cleaning up first...  \033[0m \n'

if [ -f KILLRUN.local ]
then
    sh KILLRUN.local
else
    sh KILLRUN
fi

printf '\033[22;31m\t End of killall \033[0m \n'

sleep 1

######################################################################
if [ -n "`ls data/run*.raw`" ]
then
    printf '\033[22;33m\t Making sure all data files are properly writeprotected \033[0m \n'
    chmod a=rw data/run*.raw
    printf '\033[22;32m\t ...Done!\033[0m \n'
fi

cd bin
#=====================================================================
printf '\033[22;33m\t Starting Subprocesses \033[0m \n'
#=====================================================================
######################################################################
# euRun
###############
printf '\033[22;33m\t RunControl \033[0m \n'
./euRun.exe -x 0 -y 0 -w 650 -g 550 -a tcp://$RCPORT &
sleep 1
######################################################################
# euLog
###############
printf '\033[22;33m\t Logger  \033[0m \n'
./euLog.exe -x 0 -y 550 -w 1500 -g 450 -r tcp://$HOSTIP:44000 &
sleep 2

######################################################################
# DataCollector
###############
printf '\033[22;33m\t TestDataCollector \033[0m \n'
#xterm -sb -sl 1000 -geom 80x10-480-900 -fn fixed -T "Data Collector" -e './TestDataCollector.exe -r tcp://$HOSTIP:$RCPORT' &
flog="../logs/Run${NEWRUNNUM}_DataCollector_$dt.log"
nohup ./TestDataCollector.exe -r tcp://$HOSTIP:$RCPORT > $flog 2>&1 &
printf "The logs from the DataCollector are in $flog file. \n"

sleep 2


######################################################################
# cmshgcal Producer
###############
printf '\033[22;33m\t cms hgcal Producer \033[0m \n'
xterm -sb -sl 1000 -geom 80x600-280-900 -fn fixed -T "CMS HGCal Producer" -e './HGCalProducer.exe -r tcp://$HOSTIP:$RCPORT' &
#flog="../logs/Run${NEWRUNNUM}_HGCalProducer_$dt.log"
#nohup ./HGCalProducer.exe -r tcp://$HOSTIP:$RCPORT > $flog 2>&1 &
#printf "The logs from the HGCalProducer are in $flog file. \n"

sleep 2


#####################################################################
if [ -f "HgcOnlineMon.exe" ]
then
    printf '\033[22;33m\t  HGC Online Monitor  \033[0m \n'
    flog="../logs/Run${NEWRUNNUM}_HgcOnlineMon_$dt.log"
    config_file="../producers/cmshgcal/conf/OnlineMon.conf"
    #./HgcOnlineMon.exe -u 100 -rf -rs -sc 2 -c $config_file -tc 0 -r tcp://$HOSTIP:$RCPORT
    nohup ./HgcOnlineMon.exe -u 500 -rf -rs -sc 0 -c $config_file -tc 0 -r tcp://$HOSTIP:$RCPORT > $flog 2>&1 &
    printf "The logs from the Online Monitor are in $flog file. \n"
 
else
    printf '\033[22;31m\t  Online monitor not found! \033[0m \n'
    echo 'Configure EUDAQ with the CMake option "-D BUILD_onlinemon=ON" and re-run "make install" to install.'
fi
#####################################################################


printf ' \n'
printf ' \n'
printf ' \n'
printf '\033[1;32;48m\t ...Done!\033[0m \n'
printf '\033[1;32;48mSTART OF DAQ COMPLETE\033[0m \n'

